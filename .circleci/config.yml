version: 2.1
orbs:
  node: circleci/node@4.1.0
  ruby: circleci/ruby@1.1.4
  browser-tools: circleci/browser-tools@1.1.3
references:
  default_ruby_version: &default_ruby_version 3.0-browsers
  default_postgres_version: &default_postgres_version 13-ram
  ruby_envs: &ruby_envs
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      PGHOST: 127.0.0.1
      PGPASSWORD: sekret
      RAILS_ENV: test
      PAGER: cat # prevent psql commands using less
  postgres_envs: &postgres_envs
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: sekret
executors:
  default:
    parameters:
      ruby_tag:
        description: "The `cimg/ruby` Docker image version tag."
        type: string
        default: *default_ruby_version
    docker:
      - image: cimg/ruby:<< parameters.ruby_tag >>
        <<: *ruby_envs
  ruby_with_postgres:
    parameters:
      ruby_tag:
        description: "The `cimg/ruby` Docker image version tag."
        type: string
        default: *default_ruby_version
      postgres_tag:
        description: "The `circleci/postgres` Docker image version tag."
        type: string
        default: *default_postgres_version
    docker:
      - image: cimg/ruby:<< parameters.ruby_tag >>
        <<: *ruby_envs
      - image: circleci/postgres:<< parameters.postgres_tag >>
        <<: *postgres_envs
jobs:
  build:
    executor: default
    steps:
      - checkout
      - ruby/install-deps:
          key: happy-heron-v2
  checking:
    executor: default
    steps:
      - checkout
      - ruby/install-deps:
          key: happy-heron-v2
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  test:
    executor: ruby_with_postgres
    steps:
      - checkout
      - ruby/install-deps:
          key: happy-heron-v2
      - browser-tools/install-chrome
      - run:
          name: Install psql
          command: sudo apt update && sudo apt install -y postgresql-client
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:setup
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Install CodeClimate coverage reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests in parallel and calculate code coverage
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: tmp/capybara
workflows:
  version: 2
  build:
    jobs:
      - build
      - checking:
          requires:
            - build
      - test:
          requires:
            - build
